version: "3.8"

name: "Testing"

services:
  testing_authorization_api:
    build:
      context: .
      dockerfile: Dockerfile.Authorization
    container_name: testing_authorization_api
    ports:
      - "5201:5201"
      - "5202:5202"
    environment:
      - ConnectionStrings__RedisCacheConnection=redis:6379,password=${REDIS_PASSWORD}
      - ConnectionStrings__NpgConnection=Host=postgres_db;UserName=${PG_USER};Password=${PG_PASSWORD};Database=Authorize;Port=5432
      - JwtSettings__SecretKey=${JWT_SECRETKEY}
      - JwtSettings__Issuer=${JWT_ISSUER}
      - JwtSettings__ExpirationTimeRefreshTokenInDays=${JWT_EXPIRATIONTIMEINDAYS}
      - JwtSettings__ExpirationTimeInMinutes=${JWT_EXPIRATIONTIMEINMINUTES}
      - JwtSettings__Audience=${JWT_AUDIENCE}
      - RabbitMqSettings__User=${RABBITMQ_USER}
      - RabbitMqSettings__Password=${RABBITMQ_PASSWORD}
      - RabbitMqSettings__Host=rabbitmq
      - ASPNETCORE_URLS=https://+:5202;http://+:5201
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${SERTIFICATE_PASSWORD}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - ./certs:/https:ro
    networks:
      - testing_postgres_net
      - message_broker_net
      - redis_net
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      postgres_db:
        condition: service_healthy

  testing_notification_api:
    build:
      context: .
      dockerfile: Dockerfile.Notification
    container_name: testing_notification_api
    ports:
      - "5101:5101"
      - "5102:5102"
    environment:
      - RabbitMqSettings__User=${RABBITMQ_USER}
      - RabbitMqSettings__Password=${RABBITMQ_PASSWORD}
      - RabbitMqSettings__Host=rabbitmq
      - EmailSettings__ReceiverEmail=${EMAIL_RECIVER}
      - EmailSettings__Password=${EMAIL_PASSWORD}
      - ASPNETCORE_URLS=https://+:5102;http://+:5101
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${SERTIFICATE_PASSWORD}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - ./certs:/https:ro
    networks:
      - message_broker_net
    depends_on:
      rabbitmq:
        condition: service_healthy

  postgres_db:
    restart: always
    image: postgres
    container_name: testing_postgres
    ports:
      - "5555:5432"
    environment:
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_USER=${PG_USER}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - testing_postgres_volume:/var/lib/postgresql/data/pgdata
    networks:
      - testing_postgres_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U FaITh725"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:management
    container_name: testing_message_broker
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    networks:
      - message_broker_net
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 5

  redis:
    image: redis/redis-stack:latest
    container_name: testing_redis_om
    ports:
      - "6379:6379"
      - "8001:8001"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_ARGS=--requirepass ${REDIS_PASSWORD}
    networks:
      - redis_net
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 3s
      timeout: 3s
      retries: 5

networks:
  testing_postgres_net:
    driver: bridge
  message_broker_net:
    driver: bridge
  redis_net:
    driver: bridge

volumes:
  testing_postgres_volume:
    driver: local