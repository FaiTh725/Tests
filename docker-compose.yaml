version: "3.8"

name: "Testing"

services:
  # testing_feedback_api:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.Feedback
  #   container_name: testing_feedback_api
  #   ports:
  #     - "5401:5401"
  #     - "5402:5402"
  #   environment:
  #     - ConnectionStrings__PostgressConnection=Host=postgres_db;UserName=FaITh725;Password=eZQ9XeVGvT;Database=Feedback;Port=5432
  #     - ConnectionStrings__AzuriteBlobStorage=DefaultEndpointsProtocol=http;BlobEndpoint=http://azurite_storage:10000/FaITh725;AccountName=FaITh725;AccountKey=ZGV2c3RvcmVhY2NvdW50Mw==
  #     - JwtSettings__SecretKey=SuperSecretKey8234064.SaltyForKey023.495
  #     - JwtSettings__Issuer=FaITh
  #     - JwtSettings__Audience=Audience
  #     - RabbitMqSettings__User=FaITh725
  #     - RabbitMqSettings__Password=eZQ9XeVGvT
  #     - RabbitMqSettings__Host=rabbitmq
  #     - ExternalServices__TestingService=https://testing_testing_api:5302
  #     - ASPNETCORE_URLS=https://+:5402;http://+:5401
  #     - ASPNETCORE_Kestrel__Certificates__Default__Password=eZQ9XeVGvT
  #     - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/testing_app.pfx
  #   volumes:
  #     - ./certs:/https:ro
  #   networks:
  #     - testing_postgres_net
  #     - application_net
  #     - message_broker_net
  #     - azurite_net
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #     postgres_db:
  #       condition: service_healthy

  testing_testing_api:
    build:
      context: .
      dockerfile: Dockerfile.Testing
    container_name: testing_testing_api
    ports:
      - "5301:5301"
      - "5302:5302"
    environment:
      - ConnectionStrings__RedisConnection=redis://:eZQ9XeVGvT@redis:6379
      - ConnectionStrings__MongoDbConnection=mongodb://FaITh725:eZQ9XeVGvT@mongo_db:27017/?authSource=admin&replicaSet=rs0&directConnection=true
      - ConnectionStrings__AzuriteBlobStorage=DefaultEndpointsProtocol=http;BlobEndpoint=http://azurite_storage:10000/FaITh725;AccountName=FaITh725;AccountKey=ZGV2c3RvcmVhY2NvdW50Mw==
      - JwtSettings__SecretKey=SuperSecretKey8234064.SaltyForKey023.495
      - JwtSettings__Issuer=FaITh
      - JwtSettings__Audience=Audience
      - RabbitMqSettings__User=FaITh725
      - RabbitMqSettings__Password=eZQ9XeVGvT
      - RabbitMqSettings__Host=rabbitmq
      - ASPNETCORE_URLS=https://+:5302;http://+:5301
      - ASPNETCORE_Kestrel__Certificates__Default__Password=eZQ9XeVGvT
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - ./certs:/https:ro
    networks:
      - testing_mongo_net
      - message_broker_net
      - redis_net
      - application_net
      - azurite_net
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      mongo_db:
        condition: service_healthy

  testing_authorization_api:
    build:
      context: .
      dockerfile: Dockerfile.Authorization
    container_name: testing_authorization_api
    ports:
      - "5201:5201"
      - "5202:5202"
    environment:
      - ConnectionStrings__RedisCacheConnection=redis:6379,password=eZQ9XeVGvT
      - ConnectionStrings__NpgConnection=Host=postgres_db;UserName=FaITh725;Password=eZQ9XeVGvT;Database=Authorize;Port=5432
      - JwtSettings__SecretKey=SuperSecretKey8234064.SaltyForKey023.495
      - JwtSettings__Issuer=FaITh
      - JwtSettings__ExpirationTimeRefreshTokenInDays=15
      - JwtSettings__ExpirationTimeInMinutes=15
      - JwtSettings__Audience=Audience
      - RabbitMqSettings__User=FaITh725
      - RabbitMqSettings__Password=eZQ9XeVGvT
      - RabbitMqSettings__Host=rabbitmq
      - ASPNETCORE_URLS=https://+:5202;http://+:5201
      - ASPNETCORE_Kestrel__Certificates__Default__Password=eZQ9XeVGvT
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - ./certs:/https:ro
    networks:
      - testing_postgres_net
      - message_broker_net
      - redis_net
      - application_net
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      postgres_db:
        condition: service_healthy

  testing_notification_api:
    build:
      context: .
      dockerfile: Dockerfile.Notification
    container_name: testing_notification_api
    ports:
      - "5101:5101"
      - "5102:5102"
    environment:
      - RabbitMqSettings__User=FaITh725
      - RabbitMqSettings__Password=eZQ9XeVGvT
      - RabbitMqSettings__Host=rabbitmq
      - EmailSettings__ReciverEmail=sasha.zelenukho.2016@mail.ru
      - EmailSettings__Password=HK0ifnR0VWXjmbxNVj0X
      - ASPNETCORE_URLS=https://+:5102;http://+:5101
      - ASPNETCORE_Kestrel__Certificates__Default__Password=eZQ9XeVGvT
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - ./certs:/https:ro
    networks:
      - message_broker_net
    depends_on:
      rabbitmq:
        condition: service_healthy

  mongo_db:
    image: mongo
    container_name: testing_mongo_db
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=FaITh725
      - MONGO_INITDB_ROOT_PASSWORD=eZQ9XeVGvT
    volumes:
      - testing_mongo_volume:/data/db
      - ./conf/mongo-keyfile:/etc/mongo/mongo-keyfile
    networks:
      - testing_mongo_net
    command: >
      mongod --auth --replSet rs0 --keyFile /etc/mongo/mongo-keyfile --bind_ip_all
    healthcheck:
      test: mongosh --eval "db.adminCommand('ping')" || exit 1
      interval: 5s
      timeout: 30s
      retries: 10

  testing_mongo_express:
    image: mongo-express
    container_name: testing_mongo_express
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=FaITh725
      - ME_CONFIG_MONGODB_ADMINPASSWORD=eZQ9XeVGvT
      - ME_CONFIG_MONGODB_URL=mongodb://FaITh725:eZQ9XeVGvT@mongo_db:27017/?authSource=admin&replicaSet=rs0
      - ME_CONFIG_BASICAUTH=false
    networks:
      - testing_mongo_net
    depends_on:
      mongo_db:
        condition: service_healthy

  postgres_db:
    restart: always
    image: postgres
    container_name: testing_postgres
    ports:
      - "5555:5432"
    environment:
      - POSTGRES_PASSWORD=eZQ9XeVGvT
      - POSTGRES_USER=FaITh725
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - testing_postgres_volume:/var/lib/postgresql/data/pgdata
    networks:
      - testing_postgres_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U FaITh725"]
      interval: 5s
      timeout: 5s
      retries: 5

  azurite_storage:
    image: mcr.microsoft.com/azure-storage/azurite:latest
    container_name: testing_blob_storage
    ports:
      - "10000:10000"
    environment:
      - "AZURITE_ACCOUNTS=FaITh725:ZGV2c3RvcmVhY2NvdW50Mw=="
    volumes:
      - testing_blob_volume:/data
    networks:
      - azurite_net

  rabbitmq:
    image: rabbitmq:management
    container_name: testing_message_broker
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=FaITh725
      - RABBITMQ_DEFAULT_PASS=eZQ9XeVGvT
    networks:
      - message_broker_net
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 5

  redis:
    image: redis/redis-stack:latest
    container_name: testing_redis_om
    ports:
      - "6379:6379"
      - "8001:8001"
    environment:
      - REDIS_PASSWORD=eZQ9XeVGvT
      - REDIS_ARGS=--requirepass eZQ9XeVGvT
    networks:
      - redis_net
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 3s
      timeout: 3s
      retries: 5

networks:
  testing_postgres_net:
    driver: bridge
  testing_mongo_net:
    driver: bridge
  message_broker_net:
    driver: bridge
  redis_net:
    driver: bridge
  azurite_net:
    driver: bridge
  application_net:
    driver: bridge

volumes:
  testing_postgres_volume:
    driver: local
  testing_mongo_volume:
    driver: local
  testing_blob_volume:
    driver: local