version: "3.8"

name: "Testing"

services:
  testing_authorizetion_api:
    build:
      context: .
      dockerfile: Dockerfile.Authorization
    container_name: testing_authorizetion_api
    ports:
      - "5201:5201"
      - "5202:5202"
    environment:
      - ConnectionStrings__RedisCacheConnection=redis:6379,password=eZQ9XeVGvT
      - ConnectionStrings__NpgConnection=Host=postgres_db;UserName=FaITh725;Password=eZQ9XeVGvT;Database=Authorize;Port=5432
      - JwtSettings__SecretKey=SuperSecretKey8234064.SaltyForKey023.495
      - JwtSettings__Issuer=FaITh
      - JwtSettings__ExpirationTimeRefreshTokenInDays=15
      - JwtSettings__ExpirationTimeInMinutes=15
      - JwtSettings__Audience=Audience
      - RabbitMqSettings__User=FaITh725
      - RabbitMqSettings__Password=eZQ9XeVGvT
      - RabbitMqSettings__Host=rabbitmq
      - GrpcServer=https://localhost:7114
      - ASPNETCORE_URLS=https://+:5202;http://+:5201
      - ASPNETCORE_Kestrel__Certificates__Default__Password=eZQ9XeVGvT
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - ./certs:/https:ro
    networks:
      - testing_postgres_net
      - message_broker_net
      - redis_net
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      postgres_db:
        condition: service_healthy

  testing_notification_api:
    build:
      context: .
      dockerfile: Dockerfile.Notification
    container_name: testing_notification_api
    ports:
      - "5101:5101"
      - "5102:5102"
    environment:
      - RabbitMqSettings__User=FaITh725
      - RabbitMqSettings__Password=eZQ9XeVGvT
      - RabbitMqSettings__Host=rabbitmq
      - EmailSettings__ReciverEmail=sasha.zelenukho.2016@mail.ru
      - EmailSettings__Password=HK0ifnR0VWXjmbxNVj0X
      - ASPNETCORE_URLS=https://+:5102;http://+:5101
      - ASPNETCORE_Kestrel__Certificates__Default__Password=eZQ9XeVGvT
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - ./certs:/https:ro
    networks:
      - message_broker_net
    depends_on:
      rabbitmq:
        condition: service_healthy

  mongo_db:
    restart: always
    image: mongodb/mongodb-community-server
    container_name: testing_mongo_db
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_PASSWORD=eZQ9XeVGvT
      - MONGO_INITDB_ROOT_USERNAME=FaITh725
    volumes:
      - testing_mongo_volume:/data/db
    networks:
      - testing_mongo_net
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 15s
      retries: 15
  
  testing_mong_express:
    restart: always
    image: mongo-express
    container_name: testing_mongo_express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_BASICAUTH_USERNAME=FaITh725
      - ME_CONFIG_BASICAUTH_PASSWORD=eZQ9XeVGvT
      - ME_CONFIG_MONGODB_URL=mongodb://FaITh725:eZQ9XeVGvT@mongo_db:27017
    networks:
      - testing_mongo_net
    depends_on:
      - mongo_db

  postgres_db:
    restart: always
    image: postgres
    container_name: testing_postgres
    ports:
      - "5555:5432"
    environment:
      - POSTGRES_PASSWORD=eZQ9XeVGvT
      - POSTGRES_USER=FaITh725
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - testing_postgres_volume:/var/lib/postgresql/data/pgdata
    networks:
      - testing_postgres_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U FaITh725"]
      interval: 5s
      timeout: 5s
      retries: 5

  azurite_storage:
    image: mcr.microsoft.com/azure-storage/azurite:latest
    container_name: testing_blob_storage
    ports:
      - "10000:10000"
    environment:
      - "AZURITE_ACCOUNTS=FaITh725:ZGV2c3RvcmVhY2NvdW50Mw=="
    volumes:
      - testing_blob_volume:/data

  rabbitmq:
    image: rabbitmq:management
    container_name: testing_message_broker
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=FaITh725
      - RABBITMQ_DEFAULT_PASS=eZQ9XeVGvT
    networks:
      - message_broker_net
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 5

  redis:
    image: redis/redis-stack:latest
    container_name: testing_redis_om
    ports:
      - "6379:6379"
      - "8001:8001"
    environment:
      - REDIS_PASSWORD=eZQ9XeVGvT
      - REDIS_ARGS=--requirepass eZQ9XeVGvT
    networks:
      - redis_net
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 3s
      timeout: 3s
      retries: 5

networks:
  testing_postgres_net:
    driver: bridge
  testing_mongo_net:
    driver: bridge
  message_broker_net:
    driver: bridge
  redis_net:
    driver: bridge

volumes:
  testing_postgres_volume:
    driver: local
  testing_mongo_volume:
    driver: local
  testing_blob_volume:
    driver: local